apiVersion: batch/v1
kind: CronJob
metadata:
  name: nextcloud-cron
spec:
  jobTemplate:
    spec:
      template:
        spec:
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    cronjob: nextcloud
                topologyKey: kubernetes.io/hostname
          containers:
          - command:
            - sh
            - -c
            - |-
              cd /var/www/html
              php cron.php
            image: nextcloud:30.0.4-fpm-alpine
            imagePullPolicy: IfNotPresent
            name: nextcloud-cron
            volumeMounts:
            - mountPath: /var/www/
              name: nextcloud-main
              subPath: root
            - mountPath: /var/www/html/
              name: nextcloud-main
              subPath: html
            - mountPath: /var/www/html/config
              name: nextcloud-main
              subPath: config
            - mountPath: /var/www/html/custom_apps
              name: nextcloud-main
              subPath: custom_apps
            - mountPath: /var/www/html/data
              name: nextcloud-main
              subPath: data
            - mountPath: /var/www/html/themes
              name: nextcloud-main
              subPath: themes
            - mountPath: /var/www/html/tmp
              name: nextcloud-main
              subPath: tmp
          restartPolicy: OnFailure
          securityContext:
            fsGroup: 82
            runAsNonRoot: true
            runAsUser: 82
          volumes:
          - name: nextcloud-main
            persistentVolumeClaim:
              claimName: nextcloud-nextcloud
  schedule: '*/15 * * * *'
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nextcloud
  namespace: argocd
spec:
  destination:
    namespace: nextcloud
    server: https://kubernetes.default.svc
  project: default
  sources:
  - chart: nextcloud
    helm:
      parameters: []
      valuesObject:
        externalDatabase:
          database: nextcloud
          enabled: true
          existingSecret:
            enabled: true
            passwordKey: mariadb-password
            secretName: nextcloud-mariadb-auth
            usernameKey: mariadb-username
          type: mysql
        image:
          flavour: fpm
          repository: nextcloud
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod-nginx
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/affinity: cookie
            nginx.ingress.kubernetes.io/cors-allow-headers: X-Forwarded-For
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/proxy-buffer-size: 4k
            nginx.ingress.kubernetes.io/proxy-buffering: "off"
            nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
            nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
            nginx.ingress.kubernetes.io/proxy-request-buffering: "on"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
            nginx.ingress.kubernetes.io/server-snippet: |-
              server_tokens off;
              proxy_hide_header X-Powered-By;
              rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
              rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
              rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
              rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
              location = /.well-known/carddav {
                return 301 $scheme://$host/remote.php/dav;
              }
              location = /.well-known/caldav {
                return 301 $scheme://$host/remote.php/dav;
              }
              location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
              }
              location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
                deny all;
              }
              location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
                deny all;
              }
          className: nginx
          enabled: true
          tls:
          - hosts:
            - nextcloud.phonkd.net
            secretName: nextcloud-tls
        internalDatabase:
          enabled: false
        mariadb:
          auth:
            existingSecret: nextcloud-mariadb-auth
          enabled: true
          image:
            tag: 11.3.2-debian-12-r5
          primary:
            persistence:
              enabled: true
              size: 5Gi
            resourcesPreset: small
        nextcloud:
          configs:
            custom.config.php: |
              <?php
                $CONFIG = array(
                  "check_data_directory_permissions"=> false,
                  "trusted_domains" => array (
                    $_ENV["NEXTCLOUD_TRUSTED_DOMAINS"],
                  ),
                );
            previews.config.php: |-
              <?php
              $CONFIG = array (
                'enable_previews' => true,
                'enabledPreviewProviders' => array (
                  'OC\Preview\Movie',
                  'OC\Preview\PNG',
                  'OC\Preview\JPEG',
                  'OC\Preview\GIF',
                  'OC\Preview\BMP',
                  'OC\Preview\XBitmap',
                  'OC\Preview\MP3',
                  'OC\Preview\MP4',
                  'OC\Preview\TXT',
                  'OC\Preview\MarkDown',
                  'OC\Preview\PDF'
                ),
              );
            proxy.config.php: |-
              <?php
              $CONFIG = array (
                'trusted_proxies' => array(
                  0 => '127.0.0.1',
                  1 => '10.0.0.0/8',
                ),
                'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
              );
          containerPort: 8080
          defaultConfigs:
            .htaccess: false
            apache-pretty-urls.config.php: false
            s3.config.php: false
            smtp.config.php: true
            swift.config.php: false
          extraEnv:
          - name: PHP_INI_SCAN_DIR
            value: :/usr/local/etc/php-fpm.d/
          extraInitContainers:
          - command:
            - sh
            - -c
            - |-
              /bin/chown -R 82:82 /var/www/html
              find /var/www/html -type d -exec chmod 750 {} \;
              find /var/www/html -type f -exec chmod 640 {} \;
            image: nextcloud:30.0.4-fpm-alpine
            name: nextcloud-init
            securityContext:
              capabilities:
                add:
                - CHOWN
          extraVolumeMounts:
          - mountPath: /docker-entrypoint-hooks.d/before-starting/install-apps.sh
            name: before-starting-scripts
            subPath: install-apps.sh
          - mountPath: /var/cache/nginx
            name: nginx-cache
          extraVolumes:
          - configMap:
              defaultMode: 360
              name: before-starting-scripts
            name: before-starting-scripts
          - emptyDir: {}
            name: nginx-cache
          host: nextcloud.phonkd.net
          password: initial-access-1234!
          phpConfigs:
            zz-max_upload_size.ini: |-
              upload_max_filesize=10240M
              post_max_size=10240M
            zz-memory-limit.ini: memory_limit=1024M
            zz-pm_children.ini: |-
              pm=dynamic
              pm.max_children=120
              pm.start_servers=12
              pm.min_spare_servers=6
              pm.max_spare_servers=18
            zz-timeout.ini: |-
              request_terminate_timeout=3600
              max_execution_time=3600
          securityContext:
            readOnlyRootFilesystem: false
            runAsGroup: 82
            runAsNonRoot: true
            runAsUser: 82
          username: admin
        nginx:
          config:
            custom: |
              upstream php-handler {
                  server 127.0.0.1:9000;
              }
              server {
                  listen 8080;
                  add_header Referrer-Policy "no-referrer" always;
                  add_header X-Content-Type-Options "nosniff" always;
                  add_header X-Download-Options "noopen" always;
                  add_header X-Frame-Options "SAMEORIGIN" always;
                  add_header X-Permitted-Cross-Domain-Policies "none" always;
                  add_header X-Robots-Tag "noindex, nofollow" always;
                  add_header X-XSS-Protection "1; mode=block" always;
                  client_max_body_size 10G;
                  fastcgi_buffers 64 4K;
                  fastcgi_read_timeout 3600s;
                  gzip on;
                  gzip_vary on;
                  gzip_comp_level 4;
                  gzip_min_length 256;
                  gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
                  gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;
                  fastcgi_hide_header X-Powered-By;
                  include mime.types;
                  types {
                      text/javascript js mjs;
                  }
                  root /var/www/html;
                  index index.php index.html /index.php$request_uri;
                  location = / {
                      if ( $http_user_agent ~ ^DavClnt ) {
                          return 302 /remote.php/webdav/$is_args$args;
                      }
                  }
                  location = /robots.txt {
                      allow all;
                      log_not_found off;
                      access_log off;
                  }
                  location ^~ /.well-known {
                      location = /.well-known/carddav     { return 301 /remote.php/dav/; }
                      location = /.well-known/caldav      { return 301 /remote.php/dav/; }
                      location ^~ /.well-known            { return 301 /index.php$uri; }
                      try_files $uri $uri/ =404;
                  }
                  location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
                  location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)              { return 404; }
                  location ~ \.php(?:$|/) {
                      rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+|.+\/richdocumentscode(_arm64)?\/proxy) /index.php$request_uri;
                      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
                      set $path_info $fastcgi_path_info;
                      try_files $fastcgi_script_name =404;
                      include fastcgi_params;
                      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                      fastcgi_param PATH_INFO $path_info;
                      fastcgi_param modHeadersAvailable true;
                      fastcgi_param front_controller_active true;
                      fastcgi_pass php-handler;
                      fastcgi_intercept_errors on;
                      fastcgi_request_buffering off;
                  }
                  location ~ \.(?:css|js|svg|gif)$ {
                      try_files $uri /index.php$request_uri;
                      expires 6M;
                      access_log off;
                  }
                  location ~ \.woff2?$ {
                      try_files $uri /index.php$request_uri;
                      expires 7d;
                      access_log off;
                  }
                  location / {
                      try_files $uri $uri/ /index.php$request_uri;
                  }
              }
            default: false
            headers:
              Referrer-Policy: no-referrer
              Strict-Transport-Security: ""
              X-Content-Type-Options: nosniff
              X-Download-Options: noopen
              X-Frame-Options: SAMEORIGIN
              X-Permitted-Cross-Domain-Policies: none
              X-Robots-Tag: noindex, nofollow
              X-XSS-Protection: 1; mode=block
          containerPort: 8080
          enabled: true
          image:
            repository: nginxinc/nginx-unprivileged
            tag: alpine3.20
          securityContext:
            readOnlyRootFilesystem: false
            runAsGroup: 82
            runAsNonRoot: true
            runAsUser: 82
        persisitence:
          enabled: false
        persistence:
          enabled: true
          size: 100Gi
          storageClass: longhorn
        phpClientHttpsFix:
          enabled: true
          protocol: https
        podLabels:
          cronjob: nextcloud
        redis:
          auth:
            enabled: true
            existingSecret: nextcloud-redis-auth
            existingSecretPasswordKey: redis-password
          enabled: true
          image:
            tag: 7.2.5-debian-12-r4
          master:
            persistence:
              enabled: false
            resourcesPreset: micro
          replica:
            persistence:
              enabled: false
            resourcesPreset: micro
    repoURL: https://nextcloud.github.io/helm/
    targetRevision: 6.6.2
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: false
    syncOptions:
    - CreateNamespace=true
